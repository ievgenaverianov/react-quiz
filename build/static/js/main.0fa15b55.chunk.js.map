{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","reportWebVitals.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","to","exact","activeClassName","active","label","this","close","isAuthenticated","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLenght","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","timeout","window","setTimeout","number","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","get","response","data","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","test","String","toLowerCase","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","error","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fa15b55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__OJ5wd\",\"close\":\"Drawer_close__2b0aE\",\"active\":\"Drawer_active__2YRES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__3VSlZ\",\"open\":\"MenuToggle_open__2odYK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__vZFAl\",\"QuizWrapper\":\"Quiz_QuizWrapper__MRyEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3DLvO\",\"Question\":\"ActiveQuiz_Question__Lr-1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__1dUpw\",\"success\":\"AnswerItem_success__yIpDh\",\"error\":\"AnswerItem_error__AexEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__3Asy_\",\"success\":\"FinishedQuiz_success__3z_xN\",\"error\":\"FinishedQuiz_error__2BbW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3YSiA\",\"success\":\"Button_success__1Y0uJ\",\"error\":\"Button_error__Fe45B\",\"primary\":\"Button_primary__2RgYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__18lY8\",\"lds-ripple\":\"Loader_lds-ripple__1NppD\",\"center\":\"Loader_center__8z2cT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1YLZR\",\"AuthForm\":\"Auth_AuthForm__3cCFd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2mqD2\",\"invalid\":\"Input_invalid__2f5Hu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__WAIuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2npqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__25ZfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__33zhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__30yCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3XaPd\"};","import React from \"react\";\r\nimport classes from './MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa',\r\n\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times');\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from \"react\";\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop","import React, {Component} from \"react\";\r\nimport classes from './Drawer.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nclass Drawer extends Component {\r\n\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    renderLinks (links) {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={this.clickHandler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const cls = [classes.Drawer]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        const links = [\r\n            {to: '/', label: 'List', exact: true}\r\n        ]\r\n\r\n        if (this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: 'Create test', exact: false})\r\n            links.push({to: '/logout', label: 'Logout', exact: false})\r\n        } else {\r\n            links.push({to: '/auth', label: 'Authorization', exact: false})\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from \"react\";\r\nimport classes from './Layout.module.css';\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    { this.props.children }\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from \"react\";\r\nimport classes from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return(\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}\r\n        >\r\n            { props.answer.text }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from \"react\";\r\nimport classes from './AnswersList.module.css';\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        { props.answers.map((answer, index) => {\r\n            return (\r\n                <AnswerItem\r\n                    key={index}\r\n                    answer={answer}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />\r\n            )\r\n        }) }\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList","import React from \"react\";\r\nimport classes from './ActiveQuiz.module.css';\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n            <small>{props.answerNumber} of {props.quizLenght}</small>\r\n        </p>\r\n        <AnswersList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n        />\r\n    </div>\r\n\r\n)\r\n\r\nexport default ActiveQuiz\r\n","import React from \"react\";\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport classes from './FinishedQuiz.module.css';\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n\r\n                    return (\r\n                        <li\r\n                            key={index}\r\n                        >\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <p>Right {successCount} of {props.quiz.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Repeat</Button>\r\n                <Link to='/'>\r\n                    <Button type=\"success\">Go to test list</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from \"react\";\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n    <div className={classes.Loader}>\r\n        <div />\r\n        <div />\r\n    </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader\r\n\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-ef66f-default-rtdb.firebaseio.com/'\r\n})","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import axios from '../../axios/axios-quiz'\r\nimport {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\r\n  QUIZ_SET_STATE\r\n} from \"./actionTypes\";\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n    try {\r\n      const response = await axios.get('/quizes.json')\r\n      const quizes = []\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Test №${index + 1}`\r\n        })\r\n      })\r\n      dispatch(fetchQuizesSuccess(quizes))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart())\r\n\r\n    try {\r\n      const response = await axios.get(`/quizes/${quizId}.json`)\r\n      const quiz = response.data\r\n\r\n      dispatch(fetchQuizSuccess(quiz))\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e))\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz\r\n  }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes\r\n  }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    e\r\n  }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState, results\r\n  }\r\n}\r\n\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ\r\n  }\r\n}\r\n\r\nexport function quizNextQuestion(number) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number\r\n  }\r\n}\r\n\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY\r\n  }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz\r\n\r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0]\r\n      if (state.answerState[key] === 'success') {\r\n        return\r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion];\r\n    const results = state.results;\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = 'success'\r\n      }\r\n\r\n      dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz())\r\n        } else {\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n        }\r\n        window.clearTimeout(timeout)\r\n      }, 1000)\r\n    } else {\r\n      results[question.id] = 'error'\r\n      dispatch(quizSetState({[answerId]: 'error'}, results))\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length\r\n}","import React, {Component} from \"react\";\r\nimport classes from './Quiz.module.css';\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../store/actions/quiz\";\r\n\r\nclass Quiz extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className={classes.Quiz}>\r\n              <div className={classes.QuizWrapper}>\r\n                  <h1>Ответьте на вопросы</h1>\r\n\r\n                  {\r\n                      this.props.loading || !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.props.isFinished\r\n                          ? <FinishedQuiz\r\n                            results={this.props.results}\r\n                            quiz={this.props.quiz}\r\n                            onRetry={this.props.retryQuiz}\r\n                          />\r\n                          :  <ActiveQuiz\r\n                            answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                            question={this.props.quiz[this.props.activeQuestion].question}\r\n                            onAnswerClick={this.props.quizAnswerClick}\r\n                            quizLenght={this.props.quiz.length}\r\n                            answerNumber={this.props.activeQuestion + 1}\r\n                            state={this.props.answerState}\r\n                          />\r\n                  }\r\n\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from \"react\";\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizes} from \"../../store/actions/quiz\";\r\n\r\nclass QuizList extends Component {\r\n\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map((quiz) => {\r\n            return (\r\n              <li\r\n                key={quiz.id}\r\n              >\r\n                  <NavLink to={'/quiz/' + quiz.id}>\r\n                      {quiz.name}\r\n                  </NavLink>\r\n              </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className={classes.QuizList}>\r\n              <div>\r\n                  <h1>List of tests</h1>\r\n\r\n                  {\r\n                      this.props.loading && this.props.quizes.length !== 0\r\n                        ? <Loader />\r\n                        : <ul>{this.renderQuizes()}</ul>\r\n                  }\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from \"react\";\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n\r\n    const inputType = props.type || 'text';\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n       cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {\r\n                isInvalid(props)\r\n                    ? <span>{props.errorMessage || 'Enter the correct value'}</span>\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n\r\n","import axios from \"axios\";\r\nimport {AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email, password,\r\n      returnSecureToken: true\r\n    }\r\n\r\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD95KrUM1GvwXZ31MUsrzPrOY9qQC1aVdE'\r\n\r\n    if (isLogin) {\r\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD95KrUM1GvwXZ31MUsrzPrOY9qQC1aVdE'\r\n    }\r\n\r\n    const response = await axios.post(url, authData)\r\n    const data = response.data\r\n\r\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n    localStorage.setItem('token', data.idToken)\r\n    localStorage.setItem('userId', data.localId)\r\n    localStorage.setItem('expirationDate', expirationDate)\r\n\r\n    dispatch(authSuccess(data.idToken))\r\n    dispatch(autoLogout(data.expiresIn))\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout (() => {\r\n      dispatch(logout())\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem('token')\r\n  localStorage.removeItem('userId')\r\n  localStorage.removeItem('expirationDate')\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      dispatch(logout())\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout())\r\n      } else {\r\n        dispatch(authSuccess(token))\r\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport classes from './Auth.module.css';\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\";\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Enter correct email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Password',\r\n                errorMessage: 'Enter correct password',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n          this.state.formControls.email.value,\r\n          this.state.formControls.password.value,\r\n          true\r\n        )\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n          this.state.formControls.email.value,\r\n          this.state.formControls.password.value,\r\n          false\r\n        )\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n        let isValid = true;\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if (validation.email) {\r\n            isValid = validateEmail(value) && isValid\r\n        }\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Authorization</h1>\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                        {this.renderInputs()}\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Log in\r\n                        </Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)\r\n","import React from \"react\";\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                { props.options.map((option, index) => {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select\r\n\r\n\r\n","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n    let isValid = true\r\n\r\n    if (validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n\r\n    return isValid\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n    \r\n    return isFormValid\r\n}","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","import React, {Component} from \"react\";\r\nimport classes from './QuizCreator.module.css';\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport {createControl, validate, validateForm} from '../../form/formFramework';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Variant ${number}`,\r\n        errorMessage: 'Value cannot be empty',\r\n        id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Enter the question',\r\n            errorMessage: 'Question cannot be empty'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    }\r\n\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    addQuestionHandler = event => {\r\n        event.preventDefault()\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        }\r\n\r\n        this.props.createQuizQuestion(questionItem)\r\n\r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        })\r\n    }\r\n\r\n    createQuizHandler = event => {\r\n        event.preventDefault()\r\n\r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        })\r\n        this.props.finishCreateQuiz()\r\n    }\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n\r\n        control.touched = true;\r\n        control.value = value;\r\n        control.valid = validate(control.value, control.validation);\r\n\r\n        formControls[controlName] = control\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    }\r\n\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n\r\n            return (\r\n              <Auxiliary key={controlName + index}>\r\n                  <Input\r\n                    label={control.label}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    shouldValidate={!!control.validation}\r\n                    touched={control.touched}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                  />\r\n                  { index === 0 ? <hr /> : null}\r\n              </Auxiliary>\r\n            )\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = event => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const select = <Select\r\n          label=\"Choose right answer\"\r\n          value={this.state.rightAnswerId}\r\n          onChange={this.selectChangeHandler}\r\n          options={[\r\n              {text: 1, value: 1},\r\n              {text: 2, value: 2},\r\n              {text: 3, value: 3},\r\n              {text: 4, value: 4}\r\n          ]}\r\n        />\r\n\r\n        return (\r\n          <div className={classes.QuizCreator}>\r\n              <div>\r\n                  <h1>Quiz creation</h1>\r\n                  <form onSubmit={this.submitHandler}>\r\n\r\n                      {this.renderControls()}\r\n\r\n                      { select }\r\n\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={this.addQuestionHandler}\r\n                        disabled={!this.state.isFormValid}\r\n                      >\r\n                          Add question\r\n                      </Button>\r\n                      <Button\r\n                        type=\"success\"\r\n                        onClick={this.createQuizHandler}\r\n                        disabled={this.props.quiz.length === 0}\r\n                      >\r\n                          Create test\r\n                      </Button>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\r\nimport axios from \"../../axios/axios-quiz\";\r\n\r\nexport function createQuizQuestion(item) {\r\n  return {\r\n    type: CREATE_QUIZ_QUESTION,\r\n    item\r\n  }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n  return {\r\n    type: RESET_QUIZ_CREATION\r\n  }\r\n  \r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n  return async (dispatch, getState) => {\r\n    await axios.post('/quizes.json', getState().create.quiz)\r\n    dispatch(resetQuizCreation())\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.logout()\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to={'/'}/>\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Route, Switch, Redirect, withRouter} from \"react-router-dom\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport {connect} from \"react-redux\";\nimport Logout from \"./components/Logout/Logout\";\nimport {autoLogin} from \"./store/actions/auth\";\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render (){\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth}/>\n        <Route path=\"/quiz/:id\" component={Quiz}/>\n        <Route path=\"/\" exact component={QuizList}/>\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator}/>\n          <Route path=\"/quiz/:id\" component={Quiz}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/\" exact component={QuizList}/>\n          <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY,\r\n  QUIZ_SET_STATE\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  results: {},\r\n  isFinished: false,\r\n  activeQuestion: 0,\r\n  answerState: null,\r\n  quiz: null\r\n}\r\n\r\nexport default function quizReducer (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state, loading: true\r\n      }\r\n    case FETCH_QUIZES_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quizes: action.quizes\r\n      }\r\n    case FETCH_QUIZES_ERROR:\r\n      return {\r\n        ...state, loading: false, error: action.error\r\n      }\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state, loading: false, quiz: action.quiz\r\n      }\r\n    case QUIZ_SET_STATE:\r\n      return {\r\n        ...state, answerState: action.answerState, results: action.results\r\n      }\r\n    case FINISH_QUIZ:\r\n      return {\r\n        ...state, isFinished: true\r\n      }\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state, answerState: null, activeQuestion: action.number\r\n      }\r\n    case QUIZ_RETRY:\r\n      return {\r\n        ...state,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        isFinished: false,\r\n        results: {}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUIZ_QUESTION:\r\n      return {\r\n        ...state,\r\n        quiz: [...state.quiz, action.item]\r\n      }\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state,\r\n        quiz: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return {\r\n        ...state, token: action.token\r\n      }\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state, token: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n\r\n}","import {combineReducers} from \"redux\";\r\nimport quizReducer from \"./quiz\";\r\nimport createReducer from \"./create\";\r\nimport authReducer from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer,\r\n  auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nconst app = (\n  // <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  // </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}